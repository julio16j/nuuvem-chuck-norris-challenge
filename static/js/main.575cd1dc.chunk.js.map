{"version":3,"sources":["assets/chucknorris_logo_coloured.png","services/ChuckNorrisService.js","components/JokeForm.js","components/DetailJoke.js","components/SearchField/index.js","pages/Home/index.js","components/Highlight.js","components/ListJokes/index.js","pages/SearchJokes/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","httpInstance","axios","create","baseURL","timeout","chuckNorrisPath","search","searchTerm","concat","random","getJokesFromSearchTerm","get","getRandomJoke","_callee","_yield$getJokesFromSe","data","_yield$getRandomJoke","_data","_regeneratorRuntime","wrap","_context","prev","next","length","sent","total","abrupt","result","Math","floor","stop","ChuckNorrisService","getRandomJokeFromSearchTerm","_x","_getRandomJokeFromSearchTerm","apply","this","arguments","JokeForm","_ref","joke","react_default","a","createElement","index_es","icon","faHashtag","style","color","id","faLaughWink","value","categories","faFilter","map","category","index","className","faCalendarAlt","marginBottom","moment","created_at","format","updated_at","DetailJoke","state","closeFunction","primaryColor","getComputedStyle","document","documentElement","getPropertyValue","_useState","useState","_useState2","Object","slicedToArray","detailedJoke","setDetailedJoke","useEffect","lib_default","isOpen","open","onRequestClose","content","width","maxHeight","top","left","right","bottom","marginRight","transform","backgroundColor","loading","height","esm","components_JokeForm","SearchField","searchJokes","handleFeelingLuckClickButton","setSearchTerm","faSearch","type","placeholder","onChange","eventObject","target","onKeyDown","key","searchIfEnterPressed","onClick","HomePage","_useState3","_useState4","_useState5","_useState6","modalState","setModalState","navigate","useNavigate","_searchJokes","asyncToGenerator","Home_regeneratorRuntime","mark","_yield$ChuckNorrisSer","jokes","_handleFeelingLuckClickButton","_callee2","_context2","t0","t1","src","logo","alt","components_SearchField","_x2","components_DetailJoke","objectSpread","HighlighText","_ref$text","text","_ref$regexTerm","regexTerm","trim","regex","RegExp","parts","split","filter","String","part","i","test","ListJokes","detailFunction","Highlight","SearchJokesPage","highlightTerm","setHighlightTerm","searchedJokes","setSearchedJokes","_useState7","_useState8","_useState9","_useState10","location","useLocation","SearchJokes_regeneratorRuntime","components_ListJokes","App","Helmet","href","rel","integrity","crossOrigin","react_router_dom","react_router","path","element","Home","SearchJokes","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App","Modal","setAppElement"],"mappings":"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","file":"static/js/main.575cd1dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chucknorris_logo_coloured.39b94c0e.png\";","import axios from \"axios\";\r\nconst httpInstance = axios.create({\r\n    baseURL: 'https://api.chucknorris.io/jokes',\r\n    timeout: 10000}\r\n)\r\n\r\nconst chuckNorrisPath = {\r\n    search: (searchTerm) => `search?query=${searchTerm}`,\r\n    random: () => 'random'\r\n}\r\n\r\nexport function getJokesFromSearchTerm (searchTerm) {\r\n    return httpInstance.get(chuckNorrisPath.search(searchTerm))\r\n}\r\n\r\nexport function getRandomJoke () {\r\n    return httpInstance.get(chuckNorrisPath.random())\r\n}\r\n\r\nexport async function getRandomJokeFromSearchTerm (searchTerm) {\r\n    if (searchTerm && searchTerm.length > 3) {\r\n        const { data } = await getJokesFromSearchTerm(searchTerm)\r\n        if (data.total <= 0) {\r\n            return null\r\n        } else {\r\n            return data.result[Math.floor(Math.random() * data.result.length)];\r\n        }\r\n    } else {\r\n        const { data } = await getRandomJoke()\r\n        return data\r\n    }\r\n}\r\n\r\nexport default {\r\n    getJokesFromSearchTerm,\r\n    getRandomJoke,\r\n    getRandomJokeFromSearchTerm\r\n}","import React from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faHashtag, faLaughWink, faFilter, faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport moment from 'moment'\r\nfunction JokeForm ({joke}) {\r\n    return(\r\n        <aside>\r\n            <header>\r\n                <h4><FontAwesomeIcon icon={faHashtag} style={{color: 'var(--orange-white)'}} /> Id: {joke.id}</h4>\r\n            </header>\r\n            <main>\r\n                <section>\r\n                    <p> <FontAwesomeIcon icon={faLaughWink} style={{color: 'var(--orange-white)'}} /> Joke: {joke.value}</p>\r\n                </section>\r\n                <section>\r\n                    {joke.categories.length > 0 && \r\n                    <p> <FontAwesomeIcon icon={faFilter} style={{color: 'var(--orange-white)'}} /> Categories: \r\n                        {joke.categories.map((category, index) => {\r\n                            if (index === 0 && joke.categories.length > 1) return ' ' + category + ', '\r\n                            else if (index === 0) return ' ' + category\r\n                            else if (index + 1 === joke.categories.length) return category\r\n                            else return category + ', '\r\n                        })}\r\n                    </p>}\r\n                </section>\r\n            </main>\r\n            <footer className='d-flex justify-content-between align-items-center'>\r\n                <FontAwesomeIcon icon={faCalendarAlt} style={{color: 'var(--orange-white)', marginBottom: '11px'}} />\r\n                <p className='ml-2'>Created At: {moment(joke.created_at).format('MM/DD/YYYY')}</p>\r\n                <p className='ml-2' >Updated At: {moment(joke.updated_at).format('MM/DD/YYYY')}</p>\r\n            </footer>\r\n        </aside>\r\n    )\r\n}\r\nexport default JokeForm","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Bars } from  'react-loader-spinner'\r\nimport JokeForm from './JokeForm';\r\nfunction DetailJoke ({state, joke, closeFunction}) {\r\n    const primaryColor = getComputedStyle(document.documentElement).getPropertyValue('--primary-color');\r\n    const [detailedJoke, setDetailedJoke] = useState(null)\r\n    const customModalStyle = {\r\n        width:'80vmin',\r\n        maxHeight: '80vmin',\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'var(--background-main-color)',\r\n        color: 'white'\r\n    }\r\n    useEffect(() => {\r\n        setDetailedJoke(joke)\r\n      }, [joke]);\r\n    return (\r\n        <Modal isOpen={state.open} onRequestClose={closeFunction} style={{content:customModalStyle}} > {\r\n            (   (state.loading) &&\r\n                <div className='d-flex justify-content-center align-items-center' style={{height: '100%'}} >\r\n                    <Bars color={primaryColor} height={40} width={40} />\r\n                </div> \r\n            ) || (detailedJoke != null && <JokeForm joke={detailedJoke} />)}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DetailJoke","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nfunction SearchField ({\r\n    searchJokes,\r\n    handleFeelingLuckClickButton,\r\n    searchTerm,\r\n    setSearchTerm}) {\r\n    function searchIfEnterPressed (eventObject) {\r\n        if (eventObject.key === 'Enter') {\r\n            searchJokes(searchTerm)\r\n        }\r\n    }\r\n    return (\r\n        <main>\r\n            <div className='searchField'>\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"text\" placeholder=\"Search\" value={searchTerm}\r\n                        onChange={(eventObject) => setSearchTerm(eventObject.target.value)} \r\n                        onKeyDown={(eventObject) => searchIfEnterPressed(eventObject)} />\r\n                </div>\r\n            </div>\r\n            <div className='d-flex justify-content-center'>\r\n                <button className='searchButton' onClick={() => {searchJokes(searchTerm)}} >Pesquisar</button>\r\n                <button className='searchButton'  onClick={() => {handleFeelingLuckClickButton(searchTerm)}} >I'm feeling luck</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\nexport default SearchField\r\n","\r\nimport logo from '../../assets/chucknorris_logo_coloured.png';\r\nimport './styles.css'\r\nimport React, { useState } from 'react';\r\nimport ChuckNorrisService from '../../services/ChuckNorrisService'\r\nimport DetailJoke from '../../components/DetailJoke'\r\nimport SearchField from '../../components/SearchField'\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction HomePage () {\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [detailedJoke, setDetailedJoke] = useState(null)\r\n    const [modalState, setModalState] = useState({open: false, loading: false})\r\n    const navigate = useNavigate()\r\n\r\n    async function searchJokes (searchTerm) {\r\n        const { data: { result } } = await ChuckNorrisService.getJokesFromSearchTerm(searchTerm)\r\n        navigate('/jokes', {state: {jokes: result, searchTerm}})\r\n    }\r\n    async function handleFeelingLuckClickButton (searchTerm) {\r\n        setModalState({open: true, loading: true})\r\n        setDetailedJoke(await ChuckNorrisService.getRandomJokeFromSearchTerm(searchTerm))\r\n        setModalState({open: true, loading: false})\r\n    }\r\n    function closeModal () {\r\n        setModalState({...modalState, open: false})\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"chucknorris_logo\" />\r\n                <p>Type to search the best chuck jokes</p>\r\n            </header>\r\n            <main>\r\n                <SearchField    searchTerm={searchTerm}\r\n                                setSearchTerm={setSearchTerm}\r\n                                searchJokes={searchJokes}\r\n                                handleFeelingLuckClickButton={handleFeelingLuckClickButton}/>\r\n            </main>\r\n            <DetailJoke state={modalState} joke={detailedJoke} closeFunction={closeModal}  />\r\n        </div>\r\n    )\r\n}\r\nexport default HomePage\r\n","import React from \"react\";\r\n\r\nfunction HighlighText ({ text = \"\", regexTerm = \"\" }) {\r\n  if (!regexTerm.trim()) {\r\n    return <span>{text}</span>;\r\n  }\r\n  const regex = new RegExp(`(${regexTerm})`, \"i\");\r\n  const parts = text.split(regex);\r\n\r\n  return (\r\n    <span>\r\n      {parts.filter(String).map((part, i) => {\r\n        return regex.test(part) ? (\r\n          <mark key={i}>{part}</mark>\r\n        ) : (\r\n          <span key={i}>{part}</span>\r\n        );\r\n      })}\r\n    </span>\r\n  );\r\n};\r\nexport default HighlighText","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLaughWink } from '@fortawesome/free-solid-svg-icons'\r\nimport HighlighText from '../../components/Highlight';\r\nimport './styles.css'\r\nfunction ListJokes ({jokes, detailFunction, searchTerm}) {\r\n    return (\r\n        <div className='listContainer' >\r\n            {jokes.map((joke) => {\r\n                return <div>\r\n                    <main className='jokeBox' onClick={() => detailFunction(joke)}>\r\n                        <section>\r\n                            <p> <FontAwesomeIcon icon={faLaughWink} style={{color: 'var(--orange-white)'}} /> Joke: <HighlighText text={joke.value} regexTerm={searchTerm} /></p>\r\n                        </section>\r\n                    </main>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ListJokes","\r\nimport './styles.css'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ChuckNorrisService from '../../services/ChuckNorrisService'\r\nimport DetailJoke from '../../components/DetailJoke'\r\nimport ListJokes from '../../components/ListJokes';\r\nimport SearchField from '../../components/SearchField';\r\nfunction SearchJokesPage () {\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [highlightTerm, setHighlightTerm] = useState('')\r\n    const [searchedJokes, setSearchedJokes] = useState([])\r\n    const [detailedJoke, setDetailedJoke] = useState(null)\r\n    const [modalState, setModalState] = useState({open: false, loading: false})\r\n    const location = useLocation()\r\n    function detailFunction (joke) {\r\n        setModalState({open: true, loading: true})\r\n        setDetailedJoke(joke)\r\n        setModalState({open: true, loading: false})\r\n    }\r\n    async function searchJokes (searchTerm) {\r\n        setHighlightTerm(searchTerm)\r\n        const { data: { result } } = await ChuckNorrisService.getJokesFromSearchTerm(searchTerm)\r\n        setSearchedJokes(result)\r\n    }\r\n    async function handleFeelingLuckClickButton (searchTerm) {\r\n        setModalState({open: true, loading: true})\r\n        setDetailedJoke(await ChuckNorrisService.getRandomJokeFromSearchTerm(searchTerm))\r\n        setModalState({open: true, loading: false})\r\n    }\r\n    function closeModal () {\r\n        setModalState({...modalState, open: false})\r\n    }\r\n    useEffect(() => {\r\n        setSearchedJokes(location.state.jokes)\r\n        setSearchTerm(location.state.searchTerm)\r\n        setHighlightTerm(location.state.searchTerm)\r\n      }, [location.state]);\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"searchHeader\">\r\n                <SearchField    searchTerm={searchTerm}\r\n                                setSearchTerm={setSearchTerm}\r\n                                searchJokes={searchJokes}\r\n                                handleFeelingLuckClickButton={handleFeelingLuckClickButton}/>\r\n            </header>\r\n            <main>\r\n                <div>\r\n                    {searchedJokes != null && <ListJokes jokes={searchedJokes} detailFunction={detailFunction} searchTerm={highlightTerm} />}\r\n                </div>\r\n                \r\n            </main>\r\n            <DetailJoke state={modalState} joke={detailedJoke} closeFunction={closeModal}  />\r\n        </div>\r\n    )\r\n}\r\nexport default SearchJokesPage\r\n","import HomePage from './pages/Home'\nimport SearchJokesPage from './pages/SearchJokes'\nimport React from 'react';\nimport Helmet from 'react-helmet'\nimport { Route, Routes, HashRouter } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div>\n      <Helmet>\n        <title>Chuck Norris Jokes</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossOrigin=\"anonymous\"/>\n      </Helmet>\n      <HashRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/jokes\" element={<SearchJokesPage />} />\n          <Route path=\"*\" element={<HomePage />} />\n        </Routes>\n      </HashRouter>\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\" crossOrigin=\"anonymous\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Modal from 'react-modal';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nModal.setAppElement('#root')\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}